[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[project]
name = "cortex-desktop-assistant"
version = "1.5.0"
description = "A powerful, modular, and extensible voice assistant with multiple TTS engine support"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic>=1.10.0",
    "PyYAML>=6.0",
    "SpeechRecognition>=3.8.1",
    "playsound>=1.3.0",
    "edge-tts>=6.1.9",
    "google-cloud-texttospeech>=2.14.1",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "chatterbox-tts>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.3.1",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.28.0",
    "pylint>=2.17.0",
    "bandit>=1.7.4",
    "safety>=2.3.5",
    "pydocstyle>=6.3.0",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=cortex --cov-report=term-missing"

[tool.coverage.run]
source = ["cortex"]
omit = ["tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
